import requests
import pandas as pd
import io
from datetime import datetime, timedelta
import os
from dotenv import load_dotenv

load_dotenv()

def fetch_rmc_report(date: str = None) -> pd.DataFrame:
    """
    Fetch RMC concrete trip report.
    - If date is None => auto select yesterday
    - date format: 'YYYY-MM-DD'
    """

    if date is None:
        # yesterday
        target_date = (datetime.now() - timedelta(days=1)).strftime("%Y-%m-%d")
    else:
        target_date = date

    # build datetime range
    date_start = f"{target_date} 00:00:00"
    date_end   = f"{target_date} 23:59:59"
    POST_URL = os.getenv("POST_URL")

    payload = {
        "date_start": date_start,
        "date_end": date_end,
        "type": "vehicle",
        "vehicle_list": [
            55046,55047,55075,55085,55086,55091,55092,55093,55094,55095,55096,55097,
            55533,55534,55535,55686,55687,55688,55689,55690,55938,55939,55945,55947,
            55948,57178,57179,57180,57181,57182,57184,57185,57343,57344,58266,58267,
            40730,40733,46350,46363,46368,46371,46372,46409,46420,46424,46445,46458,
            46460,46892,46893,46894,46895,47066,47067,47068,47069,47114,47115,47116,
            47117,47119,47120,48650,48651,48652,48653,49427,49428,49429,49430,49431,
            49432,52603,52604,52774,52775,52829,53657,53658,53659,53660,53663,53664,
            53665,53666,53671,53672,53673,53674,53675,53715,53716,53717,53718,53719,
            53745,53746,53747,53748,53749,53750,53751,53752,53753,53754,53755,53756,
            53757,53758,53759,53821,53822,53823,53824,53825,53826,53827,53828,53830,
            54291,54292,54293,54294,54295,54377,54576,54577,54578,54579,54580,55004,
            55005,55006,55016,55017
        ],
        "plants_list": ["all"],
        "company_id": 1231,
        "vehicle_visibility": "40730,40733,46350,46363,46368,46371,46372,46409,46420,46424,46445,46458,46460,46892,46893,46894,46895,47066,47067,47068,47069,47114,47115,47116,47117,47119,47120,48650,48651,48652,48653,49427,49428,49429,49430,49431,49432,52603,52604,52774,52775,52829,53657,53658,53659,53660,53663,53664,53665,53666,53671,53672,53673,53674,53675,53715,53716,53717,53718,53719,53745,53746,53747,53748,53749,53750,53751,53752,53753,53754,53755,53756,53757,53758,53759,53821,53822,53823,53824,53825,53826,53827,53828,53830,54291,54292,54293,54294,54295,54377,54576,54577,54578,54579,54580,55004,55005,55006,55016,55017,55046,55047,55075,55085,55086,55091,55092,55093,55094,55095,55096,55097,55533,55534,55535,55686,55687,55688,55689,55690,55938,55939,55945,55947,55948,57178,57179,57180,57181,57182,57184,57185,57343,57344,58266,58267",
        "site_id": "",
        "type_file": "excel"
    }

    headers = {"Content-Type": "application/json"}

    with requests.Session() as s:
        # 1) Request report
        resp = s.post(POST_URL, json=payload, headers=headers, timeout=180)
        resp.raise_for_status()
        result = resp.json()

        file_url = result.get("result")
        if not file_url:
            raise ValueError(f"No file URL in response: {result}")

        # 2) Download Excel directly
        r2 = s.get(file_url, timeout=180)
        r2.raise_for_status()

        # 3) Load DataFrame from memory
        df = pd.read_excel(io.BytesIO(r2.content),skiprows=3)

    return df


# -----------------------------
# Example usage
# -----------------------------
if __name__ == "__main__":
    # yesterday automatically
    df = fetch_rmc_report()
    print(df.head())
    print(f"\nRows: {len(df):,} | Columns: {len(df.columns):,}")
    # กำหนดคอลัมน์ที่ต้องการ
    cols_to_select = [
        "หมายเลข DP",
        "รหัสรถ",
        "รหัสคนขับ",
        "คนขับรถ",
        "ประเภทรถ",
        "รหัสแพลนต์",
        "ชื่อแพลนต์",
        "รหัสไซต์งาน",
        "ชื่อไซต์งาน",
        "ระยะทางจาก Google (Bluenet)",
        "เวลาออกตั๋ว",
        "เวลาออกจากโรงงาน",
        "เวลาถึงไซต์งาน",
        "เริ่มเทปูนในหน่วยงาน",
        "จบการเทปูนในหน่วยงาน",
        "ปริมาณที่เท (คิว)",
        "เวลาออกจากไซต์งาน",
        "รหัสโรงงานที่รถกลับ",
        "โรงงานที่รถกลับ",
        "เวลากลับเข้าโรงงาน",
        "รหัสยกเลิกตั๋ว",
        "สถานะ",
        "สถานะตั๋ว",
        "ระยะทางขากลับแพลนต์ (กิโลเมตร) (คำนวณสิ้นวัน)",
    ]

    # เลือกคอลัมน์จาก DataFrame
    df = df[cols_to_select]
    df.to_json("raw_data/fleetlink.json")